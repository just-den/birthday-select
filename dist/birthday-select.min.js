!function(n){var e={};function t(a){if(e[a])return e[a].exports;var i=e[a]={i:a,l:!1,exports:{}};return n[a].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=n,t.c=e,t.d=function(n,e,a){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:a})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var i in n)t.d(a,i,function(e){return n[e]}.bind(null,i));return a},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s="./src/birthday-select.js")}({"./src/birthday-select.js":
/*!********************************!*\
  !*** ./src/birthday-select.js ***!
  \********************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n/* * * * * * * * * * * * * * * * * * * * * * *\r\n * birthday-select.js v1.0.0\r\n * https://github.com/just-den/birthday-select.git\r\n * Denis Zatishnyi (c) 2019\r\n * * * * * * * * * * * * * * * * * * * * * * */\n(function (global, factory) {\n  ( false ? undefined : _typeof(exports)) === \'object\' && typeof module !== \'undefined\' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : (undefined);\n})(this, function () {\n  \'use strict\';\n  /**\r\n   * constructor\r\n   * @private\r\n   * @param {Object} options User options\r\n   */\n\n  var birthdaySelect = function birthdaySelect(options) {\n    this.settings = extend(baseSettings, getSettings(options));\n  }; // localization settings\n\n\n  var local = {\n    "en": {\n      base: {\n        day: "Day",\n        month: "Month",\n        year: "Year"\n      },\n      month: [{\n        name: "January"\n      }, {\n        name: "February"\n      }, {\n        name: "March"\n      }, {\n        name: "April"\n      }, {\n        name: "May"\n      }, {\n        name: "June"\n      }, {\n        name: "July"\n      }, {\n        name: "August"\n      }, {\n        name: "September"\n      }, {\n        name: "October"\n      }, {\n        name: "November"\n      }, {\n        name: "December"\n      }]\n    },\n    "ru": {\n      base: {\n        day: "День",\n        month: "Месяц",\n        year: "Год"\n      },\n      month: [{\n        name: "Январь"\n      }, {\n        name: "Февраль"\n      }, {\n        name: "Март"\n      }, {\n        name: "Апрель"\n      }, {\n        name: "Май"\n      }, {\n        name: "Июнь"\n      }, {\n        name: "Июль"\n      }, {\n        name: "Август"\n      }, {\n        name: "Сентябрь"\n      }, {\n        name: "Октябрь"\n      }, {\n        name: "Ноябрь"\n      }, {\n        name: "Декабрь"\n      }]\n    },\n    "de": {\n      base: {\n        day: "Tag",\n        month: "Monat",\n        year: "Jahr"\n      },\n      month: [{\n        name: "Januar"\n      }, {\n        name: "Februar"\n      }, {\n        name: "März"\n      }, {\n        name: "April"\n      }, {\n        name: "Mai"\n      }, {\n        name: "Juni"\n      }, {\n        name: "Juli"\n      }, {\n        name: "August"\n      }, {\n        name: "September"\n      }, {\n        name: "Oktober"\n      }, {\n        name: "November"\n      }, {\n        name: "Dezember"\n      }]\n    }\n  }; // base plugin settings\n\n  var baseSettings = {\n    day: local["en"]["base"]["day"],\n    month: local["en"]["base"]["month"],\n    year: local["en"]["base"]["year"],\n    days: [],\n    months: local["en"]["month"],\n    years: []\n  }; // defaults settings\n\n  var defaults = {\n    id: null,\n    minYear: 1900,\n    maxYear: new Date().getFullYear(),\n    bootstrap: false,\n    labels: [],\n    lang: \'en\'\n  };\n  /**\r\n   * A simple forEach() implementation for Arrays, Objects and NodeLists\r\n   * @private\r\n   * @param {Array|Object|NodeList} collection Collection of items to iterate\r\n   * @param {Function} callback Callback function for each iteration\r\n   * @param {Array|Object|NodeList} scope Object/NodeList/Array that forEach is iterating over (aka `this`)\r\n   */\n\n  function forEach(collection, callback, scope) {\n    if (Object.prototype.toString.call(collection) === \'[object Object]\') {\n      for (var prop in collection) {\n        if (Object.prototype.hasOwnProperty.call(collection, prop)) {\n          callback.call(scope, collection[prop], prop, collection);\n        }\n      }\n    } else {\n      if (collection) {\n        for (var i = 0, len = collection.length; i < len; i++) {\n          callback.call(scope, collection[i], i, collection);\n        }\n      }\n    }\n  }\n\n  ;\n  /**\r\n   * Merge defaults with user options\r\n   * @private\r\n   * @param {Object} defaults Default settings\r\n   * @param {Object} options User options\r\n   * @returns {Object} Merged values of defaults and options\r\n   */\n\n  function extend(defaults, options) {\n    var extended = {};\n    forEach(defaults, function (value, prop) {\n      extended[prop] = defaults[prop];\n    });\n    forEach(options, function (value, prop) {\n      extended[prop] = options[prop];\n    });\n    return extended;\n  }\n\n  ;\n  /**\r\n  * Days data initialization\r\n  * @private\r\n  * @param {Object/Boolean/String} disabledDataArray Set option DOM element is disabled ( day is unavailable ) \r\n  */\n\n  function daysInit(disabledDataArray) {\n    var days = [];\n\n    for (var i = 1; i <= 31; i++) {\n      var o = {};\n\n      if (i <= 9) {\n        o.index = \'0\' + i;\n      } else {\n        o.index = i.toString();\n      }\n\n      if (disabledDataArray) {\n        o.disabled = disabledDataArray.indexOf(o.index) === -1;\n      } else {\n        o.disabled = false;\n      }\n\n      days.push(o);\n    }\n\n    this.settings.days = days;\n  }\n  /**\r\n  * Insert days data in DOM element\r\n  * @private\r\n  * @param {Object} select DOM element\r\n  */\n\n\n  function daysLayout(select) {\n    removeChildren(select);\n    var first = new Option(this.settings.day, \'\', true, true);\n    first.disabled = \'disabled\';\n    select.add(first);\n    this.settings.days.forEach(function (day) {\n      var option = new Option(day.index, day.index);\n\n      if (day.disabled) {\n        option.disabled = \'disabled\';\n      }\n\n      select.add(option);\n    });\n  }\n  /**\r\n  * Months data initialization\r\n  * @private\r\n  * @param {Object/Boolean/String} disabledDataArray Set option DOM element is disabled ( month is unavailable ) \r\n  */\n\n\n  function monthsInit(disabledDataArray) {\n    var months = [];\n    this.settings.months.forEach(function (month, i) {\n      i++;\n      var o = {};\n\n      if (i <= 9) {\n        o.index = \'0\' + i;\n      } else {\n        o.index = i.toString();\n      }\n\n      o.name = month.name;\n\n      if (disabledDataArray) {\n        o.disabled = disabledDataArray.indexOf(o.index) !== -1;\n      } else {\n        o.disabled = false;\n      }\n\n      months.push(o);\n    });\n    this.settings.months = months;\n  }\n  /**\r\n  * Insert months data in DOM element\r\n  * @private\r\n  * @param {Object} select DOM element\r\n  */\n\n\n  function monthsLayout(select) {\n    removeChildren(select);\n    var first = new Option(this.settings.month, \'\', true, true);\n    first.disabled = \'disabled\';\n    select.add(first);\n    this.settings.months.forEach(function (month) {\n      var option = new Option(month.name, month.index);\n\n      if (month.disabled) {\n        option.disabled = \'disabled\';\n      }\n\n      select.add(option);\n    });\n  }\n  /**\r\n  * Years data initialization\r\n  * @private\r\n  * @param {Object/Boolean/String} disabledDataArray Set option DOM element is disabled ( year is unavailable ) \r\n  */\n\n\n  function yearsInit(leap) {\n    var start = Number(this.settings.minYear);\n    var end = Number(this.settings.maxYear);\n    var i = end;\n    var years = [];\n\n    while (i >= start) {\n      var o = {};\n      o.index = i;\n\n      if (leap) {\n        o.disabled = i % 4 || !(i % 100) && i % 400;\n      } else {\n        o.disabled = false;\n      }\n\n      years.push(o);\n      i--;\n    }\n\n    this.settings.years = years;\n  }\n  /**\r\n  * Insert years data in DOM element\r\n  * @private\r\n  * @param {Object} select DOM element\r\n  */\n\n\n  function yearsLayout(select) {\n    removeChildren(select);\n    var first = new Option(this.settings.year, \'\', true, true);\n    first.disabled = \'disabled\';\n    select.add(first);\n    this.settings.years.forEach(function (year) {\n      var option = new Option(year.index, year.index);\n\n      if (year.disabled) {\n        option.disabled = \'disabled\';\n      }\n\n      select.add(option);\n    });\n  }\n  /**\r\n  * Unique Id\r\n  * @private\r\n  * @returns {String} Returns pseudo unique id\r\n  */\n\n\n  var uniqueId = function uniqueId() {\n    return \'_\' + Math.random().toString(36).substr(2, 9);\n  };\n\n  var removeChildren = function removeChildren(el) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n  };\n  /**\r\n  * Set default plugin settings according to users prefernces\r\n  * @private\r\n  * @param {Object} options Users settings\r\n  * @returns {Object} New plugin settings\r\n  */\n\n\n  function setSettings(options) {\n    if (_typeof(options) === \'object\') {\n      for (var prop in options) {\n        if (Object.prototype.hasOwnProperty.call(defaults, prop)) {\n          defaults[prop] = options[prop];\n        }\n      }\n    }\n\n    return defaults;\n  }\n  /**\r\n  * Get new plugin settings\r\n  * @private\r\n  * @param {Object} options Users settings\r\n  * @returns {Object} New plugin settings\r\n  */\n\n\n  function getSettings(options) {\n    return setSettings(options);\n  }\n  /**\r\n  * Initialization new instance of a plugin object ( fro new DOM element )\r\n  * @public\r\n  */\n\n\n  birthdaySelect.prototype.init = function () {\n    var _this2 = this;\n\n    daysInit.call(this, null);\n    monthsInit.call(this, null);\n    yearsInit.call(this, null);\n\n    try {\n      if (this.settings.id) {\n        // lang\n        if (local.hasOwnProperty(this.settings.lang)) {\n          this.settings.day = local[this.settings.lang]["base"]["day"];\n          this.settings.month = local[this.settings.lang]["base"]["month"];\n          this.settings.year = local[this.settings.lang]["base"]["year"];\n          this.settings.months = local[this.settings.lang]["month"];\n        }\n\n        console.log(\'this.settings.month: \', this.settings.month);\n        var id = document.querySelector(this.settings.id);\n        var selectDay = document.createElement(\'select\');\n        console.log(\'selectDay: \', _typeof(selectDay));\n        daysLayout.call(this, selectDay);\n        selectDay.addEventListener(\'change\', function (e) {\n          var _this = e.currentTarget;\n\n          if (_this.value >= \'1\' && _this.value <= \'29\') {\n            monthsInit.call(_this2, null);\n          } else if (_this.value === \'30\') {\n            var disabled = [\'02\'];\n            monthsLayout.call(_this2, selectMonth);\n          } else if (_this.value === \'31\') {\n            var _disabled = [\'02\', \'04\', \'06\', \'09\', \'11\'];\n            monthsInit.call(_this2, _disabled);\n          }\n\n          monthsLayout.call(_this2, selectMonth);\n        }, false);\n        var selectMonth = document.createElement(\'select\');\n        monthsLayout.call(this, selectMonth);\n        selectMonth.addEventListener(\'change\', function (e) {\n          var _this = e.currentTarget;\n          yearsInit.call(_this2, null);\n\n          if (selectDay.selectedIndex === 29 && _this.value === \'02\') {\n            yearsInit.call(_this2, \'leap\');\n          }\n\n          yearsLayout.call(_this2, selectYear);\n        }, false);\n        var selectYear = document.createElement(\'select\');\n        yearsLayout.call(this, selectYear);\n\n        if (this.settings.labels && this.settings.labels.length > 0 || this.settings.bootstrap) {\n          var wrapperDay = document.createElement(\'div\');\n\n          if (this.settings.labels[0]) {\n            var uniqueIdDay = uniqueId();\n            var labelDay = document.createElement(\'label\');\n            labelDay.innerHTML = this.settings.labels[0];\n            labelDay["for"] = uniqueIdDay;\n            selectDay.id = uniqueIdDay;\n            wrapperDay.appendChild(labelDay);\n          }\n\n          if (this.settings.bootstrap) {\n            wrapperDay.className = \'form-group\';\n            selectDay.className = \'custom-select\';\n            selectDay.required = \'required\';\n          }\n\n          wrapperDay.appendChild(selectDay);\n          var wrapperMonth = document.createElement(\'div\');\n\n          if (this.settings.labels[1]) {\n            var uniqueIdMonth = uniqueId();\n            var labelMonth = document.createElement(\'label\');\n            labelMonth.innerHTML = this.settings.labels[1];\n            labelMonth["for"] = uniqueIdMonth;\n            selectMonth.id = uniqueIdMonth;\n            wrapperMonth.appendChild(labelMonth);\n          }\n\n          if (this.settings.bootstrap) {\n            wrapperMonth.className = \'form-group\';\n            selectMonth.className = \'custom-select\';\n            selectMonth.required = \'required\';\n          }\n\n          wrapperMonth.appendChild(selectMonth);\n          var wrapperYear = document.createElement(\'div\');\n\n          if (this.settings.labels[2]) {\n            var uniqueIdYear = uniqueId();\n            var labelYear = document.createElement(\'label\');\n            labelYear.innerHTML = this.settings.labels[2];\n            labelYear["for"] = uniqueIdYear;\n            selectYear.id = uniqueIdYear;\n            wrapperYear.appendChild(labelYear);\n          }\n\n          if (this.settings.bootstrap) {\n            wrapperYear.className = \'form-group\';\n            selectYear.className = \'custom-select\';\n            selectYear.required = \'required\';\n          }\n\n          wrapperYear.appendChild(selectYear);\n          id.appendChild(wrapperDay);\n          id.appendChild(wrapperMonth);\n          id.appendChild(wrapperYear);\n        } else {\n          id.appendChild(selectDay);\n          id.appendChild(selectMonth);\n          id.appendChild(selectYear);\n        }\n      }\n    } catch (e) {\n      console.log(\'ERROR: \', e);\n    }\n  };\n\n  if (typeof window !== "undefined") {\n    window.birthdaySelect = birthdaySelect;\n  }\n\n  return birthdaySelect;\n});\n\n//# sourceURL=webpack:///./src/birthday-select.js?')}});